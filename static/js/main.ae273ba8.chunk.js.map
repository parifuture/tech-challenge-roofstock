{"version":3,"sources":["components/Rating.jsx","components/HomeDetails.jsx","components/HomeItem.jsx","App.js","serviceWorker.js","index.js"],"names":["Rating","props","id","starRating","className","type","name","value","htmlFor","title","HomeDetails","toggleHouseDetailComponent","selectedHouseData","streetAddress","cityStateZip","imagesArray","imageCollection","map","img","key","src","url","alt","console","log","href","onClick","event","dots","infinite","arrows","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","currencyFormat","num","toString","replace","HomeItem","showComponent","result","processedData","address","financial","lease","mainImageUrl","physical","score","resources","address1","address2","city","state","zip","rentalPrice","monthlyRent","leaseSummary","imageUrl","bedBath","bedRooms","bathRooms","squareFeet","yearBuilt","listPrice","grossYield","Number","parseFloat","toFixed","photos","photo","processData","App","homesList","bind","fetch","then","res","json","data","setState","catch","this","oldState","homeItems","properties","item","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae273ba8.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst Rating = (props) => {\n  const {\n    id,\n  } = props;\n  const starRating = [\n    `star5-${id}`,\n    `star4half-${id}`,\n    `star4-${id}`,\n    `star3half-${id}`,\n    `star3-${id}`,\n    `star2half-${id}`,\n    `star2-${id}`,\n    `star1half-${id}`,\n    `star1-${id}`,\n    `starhalf-${id}`,\n  ];\n  return (\n    <fieldset className=\"rating\">\n      <input type=\"radio\" id={starRating[0]} name=\"rating\" value=\"5\" />\n      <label className=\"full\" htmlFor={starRating[0]} title=\"Awesome - 5 stars\" />\n      <input type=\"radio\" id={starRating[1]} name=\"rating\" value=\"4 and a half\" />\n      <label className=\"half\" htmlFor={starRating[1]} title=\"Pretty good - 4.5 stars\" />\n      <input type=\"radio\" id={starRating[2]} name=\"rating\" value=\"4\" />\n      <label className=\"full\" htmlFor={starRating[2]} title=\"Pretty good - 4 stars\" />\n      <input type=\"radio\" id={starRating[3]} name=\"rating\" value=\"3 and a half\" />\n      <label className=\"half\" htmlFor={starRating[3]} title=\"Meh - 3.5 stars\" />\n      <input type=\"radio\" id={starRating[4]} name=\"rating\" value=\"3\" />\n      <label className=\"full\" htmlFor={starRating[4]} title=\"Meh - 3 stars\" />\n      <input type=\"radio\" id={starRating[5]} name=\"rating\" value=\"2 and a half\" />\n      <label className=\"half\" htmlFor={starRating[5]} title=\"Kinda bad - 2.5 stars\" />\n      <input type=\"radio\" id={starRating[6]} name=\"rating\" value=\"2\" />\n      <label className=\"full\" htmlFor={starRating[6]} title=\"Kinda bad - 2 stars\" />\n      <input type=\"radio\" id={starRating[7]} name=\"rating\" value=\"1 and a half\" />\n      <label className=\"half\" htmlFor={starRating[7]} title=\"Meh - 1.5 stars\" />\n      <input type=\"radio\" id={starRating[8]} name=\"rating\" value=\"1\" />\n      <label className=\"full\" htmlFor={starRating[8]} title=\"Sucks big time - 1 star\" />\n      <input type=\"radio\" id={starRating[9]} name=\"rating\" value=\"half\" />\n      <label className=\"half\" htmlFor={starRating[9]} title=\"Sucks big time - 0.5 stars\" />\n    </fieldset>\n  );\n};\n\nexport default Rating;\n","import React from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nconst HomeDetails = ({toggleHouseDetailComponent, props, selectedHouseData}) => {\n  const streetAddress = selectedHouseData.streetAddress;\n  const cityStateZip = selectedHouseData.cityStateZip;\n  let imagesArray = [];\n  if (selectedHouseData.imageCollection) {\n    imagesArray = selectedHouseData.imageCollection.map((img) => <img key={img.id} src={img.url} alt=\"img_\" />);\n  } else {\n    imagesArray = [\n      <img key={1} src=\"https://picsum.photos/550\" alt=\"Bedroom 1\" />,\n      <img key={2} src=\"https://picsum.photos/600\" alt=\"Bedroom 1\" />,\n      <img key={3} src=\"https://picsum.photos/700\" alt=\"Bedroom 1\" />,\n      <img key={4} src=\"https://picsum.photos/750\" alt=\"Bedroom 1\" />,\n      <img key={5} src=\"https://picsum.photos/800\" alt=\"Bedroom 1\" />,\n      <img key={6} src=\"https://picsum.photos/850\" alt=\"Bedroom 1\" />,\n    ];\n  }\n  console.log('imagesArray',imagesArray);\n  const settings = {\n    dots: true,\n    infinite: true,\n    arrows: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 4,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          infinite: true,\n          dots: true\n        }\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  };\n  return (\n    <div>\n      <div className=\"mb-5\">\n        <a href=\"#\" onClick={(event) => toggleHouseDetailComponent()} className=\"cursor-pointer bg-blue-600 hover:bg-blue-500 shadow-xl px-5 py-2 inline-block text-blue-100 hover:text-white rounded\">Go Back</a>\n      </div>\n      <div className=\"flex mb-4\">\n        <div className=\"w-3/5\">\n          <div className=\"h-128\">\n            <div className=\"min-h-full rounded-lg shadow-lg overflow-hidden\">\n              <Slider {...settings}>\n                {imagesArray}\n              </Slider>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-2/5 p-2 text-center\">\n          <div className=\"bg-white shadow p-4 rounded w-128\">\n            <h2>Address</h2>\n            <h3>{streetAddress}</h3>\n            <h3>{cityStateZip}</h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default HomeDetails;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n// import PropTypes from 'prop-types';\nimport Rating from './Rating';\nimport HomeDetails from './HomeDetails';\n\nconst currencyFormat = (num) => `${num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}`;\n\nconst processData = (props) => {\n  const processedData = {};\n  if (props) {\n    const {\n      id, address, financial, lease, mainImageUrl, physical, score, resources,\n    } = props;\n    processedData.id = id;\n    processedData.streetAddress = `${address.address1} ${address.address2 || ''}`;\n    processedData.cityStateZip = `${props.address.city}, ${props.address.state} ${props.address.zip}`;\n\n    if (financial) {\n      processedData.rentalPrice = `$${financial.monthlyRent}`;\n    } else if (lease) {\n      processedData.rentalPrice = `$${lease.leaseSummary.monthlyRent}`;\n    } else {\n      processedData.rentalPrice = 'N/A';\n    }\n\n    if (!mainImageUrl) {\n      processedData.imageUrl = 'https://picsum.photos/228/145';\n    } else {\n      processedData.imageUrl = props.mainImageUrl;\n    }\n\n    if (physical) {\n      processedData.bedBath = `${physical.bedRooms}bd, ${physical.bathRooms}ba | ${physical.squareFeet}sqft | Built in ${physical.yearBuilt}`;\n    } else {\n      processedData.bedBath = '2bd,2ba | 1250sqft | Built in 1987';\n    }\n\n    if (financial) {\n      processedData.listPrice = `${financial.listPrice}`;\n      processedData.monthlyRent = `${financial.monthlyRent}`;\n      processedData.grossYield = Number.parseFloat((processedData.monthlyRent * 1200) / processedData.listPrice).toFixed(2);\n\n      processedData.listPrice = `$${currencyFormat(processedData.listPrice)}`;\n      processedData.monthlyRent = `$${currencyFormat(processedData.monthlyRent)}`;\n    } else {\n      processedData.listPrice = 'N/A';\n      processedData.monthlyRent = 'N/A';\n      processedData.grossYield = 'N/A';\n    }\n\n    if (score) {\n      processedData.score = score;\n    }\n\n    if (resources) {\n      processedData.imageCollection = resources.photos.map((photo) => ({\n        id: photo.id,\n        url: photo.url,\n      }));\n    }\n  }\n  return processedData;\n};\n\nconst HomeItem = ({ props, showComponent, toggleHouseDetailComponent }) => {\n  if (props) {\n    const result = processData(props);\n\n    return (\n      <div className=\"w-full sm:w-1/2 md:w-1/5 mb-4 px-2\">\n        <div className=\"relative border bg-white rounded-lg border overflow-hidden\">\n          <picture className=\"block border-b\">\n            <img className=\"block\" src={result.imageUrl} alt=\"Pictures Coming Soon\" onClick={(event) => toggleHouseDetailComponent(result)} />\n          </picture>\n          <div className=\"opacity-50 relative -mt-12\">\n            <div className=\"bg-black shadow-lg\">\n              <div className=\"ml-1 mt-1 text-lg text-white font-medium\">\n                {result.listPrice}\n              </div>\n              <div className=\"flex items-baseline\">\n                <div className=\"subpixel-antialiased normal-case ml-2 text-white text-xs uppercase font-semibold tracking-wide\">\n                  {result.bedBath}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className=\"grid grid-flow-row grid-cols-2\">\n              <div className=\"flex\">\n                <div className=\"w-1/2 h-12 border-r pl-1 border-b\">\n                  <h3 className=\"text-gray-600 text-sm\">Monthly Rent</h3>\n                  <p>\n                    {result.monthlyRent}\n                  </p>\n                </div>\n                <div className=\"w-1/2 h-12 border-b pl-1\">\n                  <h3 className=\"text-gray-600 text-sm\">Gross Yield</h3>\n                  <p>\n                    {result.grossYield}\n                    %\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex\">\n                <div className=\"w-1/2 h-12 border-r pl-1 border-b\">\n                  <h3 className=\"text-gray-600 text-sm\">Total Return</h3>\n                  <p>$580</p>\n                </div>\n                <div className=\"w-1/2 h-12 border-b pl-1\">\n                  <h3 className=\"text-gray-600 text-sm\">Neighborhood</h3>\n                  <Rating key={result.id} id={result.id} score={result.score} />\n                </div>\n              </div>\n              <div className=\"flex\">\n                <div className=\"w-full h-12 pl-1\">\n                  <h3 className=\"text-base leading-tight\">\n                    {result.streetAddress}\n                    {' '}\n                    <br />\n                    {' '}\n                    {result.cityStateZip}\n                  </h3>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } return (\n    <h1> Loading...</h1>\n  );\n};\n\nexport default HomeItem;\n","import React, { Component } from 'react';\nimport HomeItem from './components/HomeItem';\nimport HomeDetails from './components/HomeDetails';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      homesList: [],\n      showComponent: false,\n      selectedHouseData: null,\n    };\n    this.toggleHouseDetailComponent = this.toggleHouseDetailComponent.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://dev1-sample.azurewebsites.net/properties.json')\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ homesList: data });\n      })\n      .catch(console.log);\n  }\n\n  toggleHouseDetailComponent(data) {\n    console.log('data:', data);\n    this.setState((oldState) => ({ showComponent: !oldState.showComponent }));\n    this.setState((oldState) => ({ selectedHouseData: data }));\n  }\n\n  render() {\n    // const homesList = this.state.homesList;\n    const { homesList, showComponent, selectedHouseData } = this.state;\n    let homeItems;\n    if (homesList.properties) {\n      homeItems = homesList.properties.map((item) => <HomeItem key={item.id} props={item} showComponent={showComponent} toggleHouseDetailComponent={this.toggleHouseDetailComponent} />);\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"container mx-auto p-8 bg-white\">\n          {!showComponent && (\n          <div className=\"flex flex-row flex-wrap -mx-2\">\n            {homeItems}\n          </div>\n          )}\n          {showComponent && (\n            <HomeDetails toggleHouseDetailComponent={this.toggleHouseDetailComponent} selectedHouseData={selectedHouseData} props={homesList} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/tailwind.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}